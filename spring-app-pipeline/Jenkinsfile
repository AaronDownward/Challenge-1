pipeline {
    agent any

    tools {
        maven 'maven'
    }

    stages {
        stage('Pull') {
            steps {
                git url: "https://github.com/AaronDownward/Challenge-1", branch: "dev"
            }
        }
        stage('Test') {
            steps {
                dir("simple-app") {
                    sh "mvn test -Dcheckstyle.skip=true"
                }
            }
        }
        stage('Build') {
            steps {
                dir("simple-app") {
                    sh 'ls'
                    sh "mvn package -DskipTests=true -Dcheckstyle.skip=true"
                }
            }
        }
        stage('Sonar') {
            steps {
                dir("simple-app") {
                    withSonarQubeEnv("SonarCloud") {
                        sh "mvn verify sonar:sonar -Dsonar.branch.name=\"test\""
                        sleep(20)
                    }
                }
            }
        }
        stage("Quality Gate") {
            steps {
                dir("simple-app") {
                    timeout(time: 1, unit: 'HOURS') {
                        waitForQualityGate abortPipeline: true
                    }
                }
            }
        }

        stage('Upload Docker Image') {
            steps {
                script {
                    dir("simple-app") {
                        docker.withTool('docker') {
                            repoId = "aarondownward/simple-app"
                            image = docker.build(repoId)
                            docker.withRegistry("https://registry.hub.docker.com", "dockerhub-cred") {
                                image.push()
                            }
                        }
                    }
                }
            }
        }
        stage('Deploy to Testing') {
            steps {
                dir("kube-deployments/testing") {
                    withKubeConfig([credentialsId: 'kubectl-creds', serverUrl: 'https://7B7243814A301887F34329CEF514F6CC.gr7.us-east-2.eks.amazonaws.com']) {
                        sh 'kubectl apply -f deployment.yaml'
                        sh 'kubectl apply -f service.yaml'
                        sh 'kubectl rollout restart deployment/simple-app -n testing'
                    }
                }
            }
        }
    }
}
